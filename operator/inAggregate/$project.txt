$project : 문서를 re-shape 하는 연산자

필드 선택, 수정 ex)

-- EXECUTION --

db.orders.aggregate([
  {
    $project: {
      order_id: 1,  // order_id 필드를 포함
      total_price: 1,  // total_price 필드를 포함
      discount: 0  // discount 필드를 제외
    }
  }
])

// $project에서 어떤 필드라도 0을 지정하면, 해당 필드만 제거되고 나머지는 유지됨
// $project에서 어떤 필드라도 1을 지정하면, _id를 제외한 나머지는 모두 제거됨
// $project에서 어떤 필드라도 0 또는 1로 지정하지 않으면 모든 필드를 유지함

필드 생성 ex)

-- EXECUTION --

db.orders.aggregate([
  {
    $project: {
      order_id: 1,
      total_price: 1,
      discount: 1,
      final_price: { $subtract: ["$total_price", "$discount"] }  // total_price에서 discount를 뺀 값을 final_price로 추가
    }
  }
])

필드 이름 변경 ex)

-- EXECUTION --

db.orders.aggregate([
  {
    $project: { old_price: "$final_price" } // final_price 필드명을 old_price로 변경
  }
])

배열의 일부 요소만 선택 ex)

-- EXECUTION --

db.orders.aggregate([
  {
    $project: {
      items: { $slice: ["$items", 2] }  // 배열에서 첫 번째 두 요소만 포함
    }
  }
])

조건부 로직 추가 ex)

-- EXECUTION --

db.orders.aggregate([
  {
    $project: {
      order_id: 1,
      total_price: 1,
      status: {
        $cond: { if: { $gt: ["$total_price", 100] }, then: "high", else: "low" }  // total_price가 100보다 크면 "high", 아니면 "low" 반환
      }
    }
  }
])
